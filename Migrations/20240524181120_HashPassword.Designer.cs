// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using chat_be.Data;

#nullable disable

namespace chat_be.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240524181120_HashPassword")]
    partial class HashPassword
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("chat_be.Models.MakeFriendModel", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("FriendId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAccepted")
                        .HasColumnType("bit");

                    b.Property<int?>("MessageGroupId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "FriendId");

                    b.ToTable("MakeFriendModels");
                });

            modelBuilder.Entity("chat_be.Models.MessageGroupModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MessageGroupModels");
                });

            modelBuilder.Entity("chat_be.Models.MessageGroupUserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MessageGroupId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MessageGroupId");

                    b.HasIndex("UserId");

                    b.ToTable("MessageGroupUserModels");
                });

            modelBuilder.Entity("chat_be.Models.MessageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MessageGroupId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MessageModels");
                });

            modelBuilder.Entity("chat_be.Models.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasMaxLength(5)
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayName = "Admin",
                            Password = "$2a$11$5OOOP4Ix0s.BgELOp.FE8.8kAZKJQPf3ctZStvSzghaSx0l09JDqe",
                            Role = 0,
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            DisplayName = "User 1",
                            Password = "$2a$11$aZOcV0hU6iCvv.r029AH4.vChkRJLjeKPYqkI08YIDyMp8E4AtW6e",
                            Role = 1,
                            Username = "user1"
                        },
                        new
                        {
                            Id = 3,
                            DisplayName = "User 2",
                            Password = "$2a$11$F7Z17dMljM8XHpXI7espLeYKaA0Fw216p/hqYAEGL8v/HsaUbfgJ.",
                            Role = 1,
                            Username = "user2"
                        },
                        new
                        {
                            Id = 4,
                            DisplayName = "User 3",
                            Password = "$2a$11$A/QuFWUsdR3sjNwFVQ.ZKeQbEQjnXqsfa70YEYDP4w6efpsT6od22",
                            Role = 1,
                            Username = "user3"
                        },
                        new
                        {
                            Id = 5,
                            DisplayName = "User 4",
                            Password = "$2a$11$WHWEHwvdpx/B3RH2cN3L0.5wx6kWvXAAoWQR7xWCvGZL.DYtpdmqq",
                            Role = 1,
                            Username = "user4"
                        },
                        new
                        {
                            Id = 6,
                            DisplayName = "User 5",
                            Password = "$2a$11$JKHC9JR6VdWe9zL6bBcwQu1Hc1xI4bKfjUgZz/7v5xBp3C5EoXiwe",
                            Role = 1,
                            Username = "user5"
                        },
                        new
                        {
                            Id = 7,
                            DisplayName = "User 6",
                            Password = "$2a$11$y06mxB.uRWOfY8EHv2fc2uVg2erolyG53ddho9fUbeK6zfZtsGqOC",
                            Role = 1,
                            Username = "user6"
                        },
                        new
                        {
                            Id = 8,
                            DisplayName = "User 7",
                            Password = "$2a$11$8BEluzXPX9nQWVVD4lslXO2HiZi.pDxknoWlo9uliepXFFlxoRgla",
                            Role = 1,
                            Username = "user7"
                        },
                        new
                        {
                            Id = 9,
                            DisplayName = "User 8",
                            Password = "$2a$11$OftvS5.RUDLoSZtpYSUmyuhxMJ5/wjWs9kuWxVhHBb.tvW1dFWWsG",
                            Role = 1,
                            Username = "user8"
                        },
                        new
                        {
                            Id = 10,
                            DisplayName = "User 9",
                            Password = "$2a$11$g4QYhAWDIwrQLmwGpKk8OepCTgWU4JnCOzyxkc6k1L0QeUzLQRWwu",
                            Role = 1,
                            Username = "user9"
                        },
                        new
                        {
                            Id = 11,
                            DisplayName = "User 10",
                            Password = "$2a$11$UkIRVlMlPg7rJ.9Sk7orReiOxNP6j4rm/ba9BB6gp0PPSnFgkogya",
                            Role = 1,
                            Username = "user10"
                        });
                });

            modelBuilder.Entity("chat_be.Models.MessageGroupUserModel", b =>
                {
                    b.HasOne("chat_be.Models.MessageGroupModel", "MessageGroup")
                        .WithMany("MessageGroupUsers")
                        .HasForeignKey("MessageGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("chat_be.Models.UserModel", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MessageGroup");

                    b.Navigation("User");
                });

            modelBuilder.Entity("chat_be.Models.MessageGroupModel", b =>
                {
                    b.Navigation("MessageGroupUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
